@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="col-lg-4 col-md-6 col-sm-12 mb-4">
    <div class="card h-100 shadow-sm hover-card" style="border-radius: 0.8rem; transition: all 0.3s ease;">



        <!-- Card Content (clickable area) -->
        <div class="card-body d-flex flex-column p-4" style="cursor: pointer;" @onclick="GoToActivities">
            <h5 class="card-title fw-bold mb-3 border-bottom pb-2" style="color: #1b6ec2;">
                Module Name <!-- @Module.Name -->
            </h5>
            <p class="card-text flex-grow-1" style="min-height: 60px; overflow: hidden;">
                Module description <!-- @Module.Description -->
            </p>
            <div class="mt-auto pt-3">
                <div class="bg-light rounded p-2 position-relative">
                    <small class="text-muted">
                        <strong>📅 Start:</strong> YYYY/MM/DD<br>
                        <strong>🏁 End:</strong> YYYY/MM/DD
                    </small>

                    <!-- Edit Icon for Teachers - Bottom Right -->
                    @if (IsTeacher)
                    {
                        <button class="btn btn-sm btn-outline-primary position-absolute top-50 end-0 translate-middle-y me-2"
                                @onclick="GoToEditModule"
                                @onclick:stopPropagation="true"
                                title="Edit Module"
                                style="width: 28px; height: 28px; padding: 0;">
                            <span class="bi-pencil-edit"></span>
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // [Parameter]
    // public Module Module { get; set; }

    private bool IsTeacher { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            IsTeacher = authState.User.IsInRole("Teacher");
        }
    }

    private void GoToActivities()
    {
        // Navigation.NavigateTo($"/activities/{Module.Id}");
    }

    private void GoToEditModule()
    {
        // Navigation.NavigateTo($"/edit-module/{Module.Id}");
    }
}